# Imports: 

#import category.graphql
#import user.graphql

# Scalars:

"A date string with format `Y-m-d`, e.g. `2011-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"A datetime and timezone string in ISO 8601 format `Y-m-dTH:i:sO`, e.g. `2020-04-20T13:53:12+02:00`."
scalar DateTimeTz @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTimeTz")

# Queries and mutations:

type Query {
    users: [User!]! @paginate(defaultCount: 10)
    # user(id: ID @eq): User @find
    posts: [Post] @all
    findPostByTitle(title: String! @eq): [Post] @all
    postsSearchTitle(title: String! @where(operator: "like")): [Post] @all
}

type Query {
    customPosts: [Post] @field(resolver: "PostQuery@reverse")
    customPostsLike(title: String!): [Post] @field(resolver: "PostQuery@titleLike")
}

type Mutation {
    createPost(input: CreatePostInput! @spread): Post! @create
    # createUser(name: )
    createSingleUser(input: CreateUserInput! @spread): User! @create
    deletePost(id: ID!): Post @delete
}

# Objects, enums and inputs:

input CreatePostInput {
    title: String! @rules(apply: ["min:4"])
    slug: String!
    text: String!
    user: User! 
}




type Post {
    id: ID!
    title: String!
    slug: String!
    text: String!
    user: User! @belongsTo
}

